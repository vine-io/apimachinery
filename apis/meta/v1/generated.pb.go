// Copyright 2023 lack
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.// Code generated by proto-gen-gogo. DO NOT EDIT.
// source: github.com/vine-io/apimachinery/apis/meta/v1/generated.proto

package v1

import (
	ebinary "encoding/binary"
	fmt "fmt"

	io "io"
	math "math"
	bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _ = ebinary.BigEndian

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

func (m *ListMeta) Reset()         { *m = ListMeta{} }
func (m *ListMeta) String() string { return proto.CompactTextString(m) }
func (*ListMeta) ProtoMessage()    {}
func (*ListMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_1628c045e819208d, []int{0}
}
func (m *ListMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeta.Unmarshal(m, b)
}
func (m *ListMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeta.Marshal(b, m, deterministic)
}
func (m *ListMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeta.Merge(m, src)
}
func (m *ListMeta) XXX_Size() int {
	return xxx_messageInfo_ListMeta.Size(m)
}
func (m *ListMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeta proto.InternalMessageInfo

func (m *ObjectMeta) Reset()         { *m = ObjectMeta{} }
func (m *ObjectMeta) String() string { return proto.CompactTextString(m) }
func (*ObjectMeta) ProtoMessage()    {}
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_1628c045e819208d, []int{1}
}
func (m *ObjectMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectMeta.Unmarshal(m, b)
}
func (m *ObjectMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectMeta.Marshal(b, m, deterministic)
}
func (m *ObjectMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectMeta.Merge(m, src)
}
func (m *ObjectMeta) XXX_Size() int {
	return xxx_messageInfo_ObjectMeta.Size(m)
}
func (m *ObjectMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectMeta proto.InternalMessageInfo

func (m *OwnerReference) Reset()         { *m = OwnerReference{} }
func (m *OwnerReference) String() string { return proto.CompactTextString(m) }
func (*OwnerReference) ProtoMessage()    {}
func (*OwnerReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_1628c045e819208d, []int{2}
}
func (m *OwnerReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerReference.Unmarshal(m, b)
}
func (m *OwnerReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerReference.Marshal(b, m, deterministic)
}
func (m *OwnerReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerReference.Merge(m, src)
}
func (m *OwnerReference) XXX_Size() int {
	return xxx_messageInfo_OwnerReference.Size(m)
}
func (m *OwnerReference) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerReference.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerReference proto.InternalMessageInfo

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_1628c045e819208d, []int{3}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *TypeMeta) Reset()         { *m = TypeMeta{} }
func (m *TypeMeta) String() string { return proto.CompactTextString(m) }
func (*TypeMeta) ProtoMessage()    {}
func (*TypeMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_1628c045e819208d, []int{4}
}
func (m *TypeMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeMeta.Unmarshal(m, b)
}
func (m *TypeMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeMeta.Marshal(b, m, deterministic)
}
func (m *TypeMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeMeta.Merge(m, src)
}
func (m *TypeMeta) XXX_Size() int {
	return xxx_messageInfo_TypeMeta.Size(m)
}
func (m *TypeMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TypeMeta proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListMeta)(nil), "v1.ListMeta")
	proto.RegisterType((*ObjectMeta)(nil), "v1.ObjectMeta")
	proto.RegisterMapType((map[string]string)(nil), "v1.ObjectMeta.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.ObjectMeta.LabelsEntry")
	proto.RegisterType((*OwnerReference)(nil), "v1.OwnerReference")
	proto.RegisterType((*State)(nil), "v1.State")
	proto.RegisterType((*TypeMeta)(nil), "v1.TypeMeta")
}

func init() {
	proto.RegisterFile("github.com/vine-io/apimachinery/apis/meta/v1/generated.proto", fileDescriptor_1628c045e819208d)
}

var fileDescriptor_1628c045e819208d = []byte{
	// 722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0xb6, 0xe3, 0x24, 0x90, 0x93, 0x5c, 0xb8, 0xcc, 0xbd, 0xba, 0xd7, 0x37, 0xd2, 0x75, 0xa2,
	0x74, 0x93, 0x4a, 0x25, 0x11, 0x48, 0x95, 0x50, 0xd5, 0x0d, 0x06, 0x84, 0xd4, 0x02, 0xad, 0x86,
	0xc0, 0x82, 0x55, 0x27, 0xf6, 0x21, 0x4c, 0x89, 0x7f, 0x64, 0x4f, 0x52, 0x85, 0x55, 0x1f, 0xa1,
	0x6f, 0xd1, 0x37, 0xe8, 0x33, 0xb0, 0x64, 0xc9, 0x0a, 0x95, 0xf0, 0x16, 0x5d, 0x55, 0x1e, 0x3b,
	0x89, 0x1d, 0xa8, 0x5a, 0xba, 0xcb, 0xcc, 0xf7, 0xa3, 0xf3, 0x9d, 0xcc, 0x39, 0x86, 0x97, 0x3d,
	0x2e, 0xce, 0x06, 0xdd, 0x96, 0xe5, 0x39, 0xed, 0x21, 0x77, 0x71, 0x95, 0x7b, 0x6d, 0xe6, 0x73,
	0x87, 0x59, 0x67, 0xdc, 0xc5, 0x60, 0x14, 0x1d, 0xc2, 0xb6, 0x83, 0x82, 0xb5, 0x87, 0x6b, 0xed,
	0x1e, 0xba, 0x18, 0x30, 0x81, 0x76, 0xcb, 0x0f, 0x3c, 0xe1, 0x91, 0xdc, 0x70, 0xad, 0xba, 0x9a,
	0x72, 0xe8, 0x79, 0x3d, 0xaf, 0x2d, 0xa1, 0xee, 0xe0, 0x54, 0x9e, 0xe4, 0x41, 0xfe, 0x8a, 0x25,
	0x8d, 0x2f, 0x2a, 0x2c, 0xee, 0xf1, 0x50, 0xec, 0xa3, 0x60, 0x64, 0x13, 0x96, 0x03, 0x0c, 0xbd,
	0x41, 0x60, 0xe1, 0x31, 0x06, 0x21, 0xf7, 0x5c, 0x5d, 0xad, 0xab, 0xcd, 0x92, 0xf9, 0xef, 0xe5,
	0x4d, 0x4d, 0x19, 0xdf, 0xd4, 0x96, 0x69, 0x16, 0xa6, 0xf3, 0x7c, 0x52, 0x87, 0xbc, 0xcf, 0x7a,
	0xa8, 0xe7, 0xea, 0x6a, 0xb3, 0x60, 0x56, 0x12, 0x5d, 0xfe, 0x2d, 0xeb, 0x21, 0x95, 0x48, 0xc4,
	0x08, 0xf9, 0x05, 0xea, 0x5a, 0x96, 0x71, 0xc8, 0x2f, 0x90, 0x4a, 0x84, 0x3c, 0x81, 0x82, 0xf0,
	0x04, 0xeb, 0xeb, 0xf9, 0xba, 0xda, 0xd4, 0xcc, 0x3f, 0x12, 0x4a, 0xa1, 0x13, 0x5d, 0xd2, 0x18,
	0x6b, 0x7c, 0x2b, 0x02, 0xbc, 0xe9, 0xbe, 0x47, 0x2b, 0x2e, 0xbd, 0x0e, 0x79, 0x97, 0x39, 0x98,
	0xd4, 0x3b, 0x75, 0x3d, 0x60, 0x0e, 0x52, 0x89, 0x90, 0xff, 0x41, 0x1b, 0x70, 0x5b, 0x16, 0x56,
	0x32, 0xcb, 0x09, 0x41, 0x3b, 0xe2, 0x36, 0x8d, 0xee, 0x1f, 0xca, 0xae, 0x3d, 0x32, 0xfb, 0x73,
	0x28, 0xdb, 0x18, 0x5a, 0x01, 0xf7, 0x45, 0x24, 0xcf, 0x4b, 0xf9, 0x5f, 0x89, 0xbc, 0xbc, 0x3d,
	0x83, 0x68, 0x9a, 0x47, 0xda, 0x50, 0x8a, 0x0a, 0x0c, 0x7d, 0x66, 0xa1, 0x5e, 0x90, 0xa2, 0x95,
	0x44, 0x54, 0x3a, 0x98, 0x00, 0x74, 0xc6, 0x21, 0xbb, 0xb0, 0x62, 0x05, 0xc8, 0x22, 0x71, 0x87,
	0x3b, 0x18, 0x0a, 0xe6, 0xf8, 0x7a, 0x51, 0xf6, 0xea, 0xbf, 0x44, 0xb8, 0xb2, 0x35, 0x4f, 0xa0,
	0xf7, 0x35, 0x51, 0xe6, 0x81, 0x6f, 0x33, 0x81, 0x33, 0x9b, 0x05, 0x69, 0x33, 0xcd, 0x7c, 0x94,
	0x85, 0xe9, 0x3c, 0x3f, 0xaa, 0xc5, 0xc6, 0x3e, 0x66, 0x6b, 0x59, 0xcc, 0xd6, 0xb2, 0x3d, 0x4f,
	0xa0, 0xf7, 0x35, 0x64, 0x03, 0x2a, 0x93, 0xe7, 0x1c, 0x85, 0xd6, 0x4b, 0xb2, 0x11, 0x7f, 0x27,
	0x1e, 0x95, 0xdd, 0x14, 0x46, 0x33, 0x4c, 0x62, 0x42, 0xb1, 0xcf, 0xba, 0xd8, 0x0f, 0x75, 0xa8,
	0x6b, 0xcd, 0xf2, 0x7a, 0xb5, 0x35, 0x5c, 0x6b, 0xcd, 0x9e, 0x46, 0x6b, 0x4f, 0x82, 0x3b, 0xae,
	0x08, 0x46, 0xe6, 0x52, 0xe2, 0x57, 0x8c, 0x2f, 0x69, 0xa2, 0x24, 0xc7, 0x50, 0x66, 0xae, 0xeb,
	0x09, 0xd9, 0xa0, 0x50, 0x2f, 0x4b, 0xa3, 0xda, 0x9c, 0xd1, 0xe6, 0x8c, 0x11, 0xbb, 0x4d, 0xff,
	0xdb, 0x14, 0x42, 0xd3, 0x46, 0xc4, 0x04, 0x08, 0xf0, 0x14, 0x03, 0x74, 0x2d, 0x0c, 0xf5, 0x8a,
	0xb4, 0x25, 0xd2, 0xf6, 0x83, 0x8b, 0x01, 0x9d, 0x40, 0xe6, 0xd2, 0xf8, 0xa6, 0x06, 0xd3, 0x63,
	0x48, 0x53, 0xaa, 0xea, 0x0e, 0x94, 0x53, 0x11, 0xc8, 0x3f, 0xa0, 0x9d, 0xe3, 0x28, 0x79, 0xe8,
	0xf9, 0xa8, 0x02, 0x1a, 0x5d, 0x90, 0x2a, 0x14, 0x86, 0xac, 0x3f, 0xc0, 0xe4, 0x85, 0xc7, 0x48,
	0x7c, 0xf5, 0x22, 0xb7, 0xa1, 0x56, 0x5f, 0xc1, 0x9f, 0xf3, 0x01, 0x7e, 0xd7, 0xab, 0xf1, 0x59,
	0x85, 0xa5, 0x6c, 0x02, 0xb2, 0x0e, 0xc0, 0x7c, 0x9e, 0x5d, 0x1b, 0x24, 0xe9, 0x0f, 0x6c, 0x4e,
	0x11, 0x9a, 0x62, 0x45, 0x43, 0x7b, 0xce, 0xdd, 0xc9, 0x4c, 0x4e, 0x87, 0xf6, 0x35, 0x77, 0x6d,
	0x2a, 0x91, 0xe9, 0x58, 0x6b, 0x3f, 0x1b, 0xeb, 0xfc, 0xc3, 0x63, 0xdd, 0xe8, 0x40, 0xe1, 0x50,
	0x30, 0x21, 0xd7, 0x8e, 0xe5, 0xd9, 0xf1, 0x82, 0x48, 0xad, 0x9d, 0x2d, 0xcf, 0x46, 0x2a, 0x11,
	0xf2, 0x14, 0x16, 0x1c, 0x0c, 0xc3, 0xc9, 0xf6, 0x2a, 0x99, 0xcb, 0x09, 0x69, 0x61, 0x3f, 0xbe,
	0xa6, 0x13, 0xbc, 0xf1, 0x0e, 0x16, 0x3b, 0x23, 0x1f, 0x27, 0x9b, 0x47, 0x86, 0x50, 0x7f, 0x18,
	0x22, 0xdb, 0x9a, 0xdc, 0xaf, 0xb4, 0xc6, 0x3c, 0xb9, 0xbc, 0x35, 0x94, 0xab, 0x5b, 0x43, 0xb9,
	0xbe, 0x35, 0xd4, 0x8f, 0x63, 0x43, 0xbd, 0x1c, 0x1b, 0xca, 0xd5, 0xd8, 0x50, 0xae, 0xc7, 0x86,
	0xfa, 0x75, 0x6c, 0xa8, 0x9f, 0xee, 0x0c, 0xe5, 0xea, 0xce, 0x50, 0xae, 0xef, 0x0c, 0xe5, 0xe4,
	0xd9, 0x63, 0x3e, 0x1b, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xd9, 0x15, 0x95, 0x65, 0x06,
	0x00, 0x00,
}

func (m *ListMeta) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceVersion)
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.Page))
	n += 1 + sovGenerated(uint64(m.Size))
	n += 1 + sovGenerated(uint64(m.Total))
	return n
}

func (m *ObjectMeta) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Uid)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ResourceVersion)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Description)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Namespace)
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.CreationTimestamp))
	n += 1 + sovGenerated(uint64(m.UpdateTimestamp))
	n += 1 + sovGenerated(uint64(m.DeletionTimestamp))
	l = len(m.GenerateName)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Labels) > 0 {
		for k, v := range m.Labels {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	if len(m.Annotations) > 0 {
		for k, v := range m.Annotations {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	if len(m.References) > 0 {
		for _, e := range m.References {
			l = e.XSize()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *OwnerReference) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ApiVersion)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Kind)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Uid)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *State) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.Code))
	l = len(m.Message)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *TypeMeta) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Kind)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ApiVersion)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func sovGenerated(x uint64) (n int) {
	return (bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenerated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenerated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenerated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenerated = fmt.Errorf("proto: unexpected end of group")
)
